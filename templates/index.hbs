<!DOCTYPE html>
<html>

<head>
  <title>Records list</title>
  <link rel="icon" type="image/svg" href="/favicon.svg" />
  <link href="https://fonts.googleapis.com/css2?family=Quicksand&display=swap" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/@saramorillon/minicss@2.7.0/dist/minicss.css" rel="stylesheet" />

  <style>
    body {
      display: flex;
    }

    aside {
      overflow: auto;
      height: 100vh;
      width: 20rem;
    }

    li {
      display: flex;
    }

    li :first-child {
      flex: 1;
    }

    main {
      flex: 1;
    }

    video {
      width: 100%;
    }

    .lucide {
      width: 1em;
      height: 1em;
    }
  </style>
</head>

<body>
  <aside>
    <nav>
      <ul>
        <li>
          <strong>Records <small>Free space: {{ size }}</small></strong>
          <button onclick="deleteRecords()">
            <i data-lucide="trash"></i>
          </button>
        </li>

        {{#each days}}
        <li>
          <em>{{date}}</em>
        </li>

        {{#each records}}
        <li>
          <button onclick="display(this, '{{ href }}')">
            {{date}} <small>{{ size }}</small>
          </button>
          <a href='{{ href }}'>
            <i data-lucide="download"></i>
          </a>
          <button onclick="deleteRecord('{{ href }}')">
            <i data-lucide="trash"></i>
          </button>
        </li>
        {{/each}}

        {{/each}}
      </ul>
    </nav>
  </aside>
  <main>
    <video controls>
      <source src="" type="video/mp4" />
    </video>
    <div role="group">
      <button id="previous" onclick="previous()" disabled="disabled"><i data-lucide="chevron-left"></i></button><button
        id="next" onclick="next()" disabled="disabled"><i data-lucide="chevron-right"></i></button>
    </div>
  </main>

  <script src="https://unpkg.com/lucide@latest"></script>
  <script>
    lucide.createIcons();

    const video = document.querySelector('video')
    const source = video.querySelector('source')
    const prevButton = document.querySelector('#previous')
    const nextButton = document.querySelector('#next')

    function getPrevious(active) {
      if (active) {
        const previous = active.parentElement.previousElementSibling
        if (previous) {
          const button = previous.querySelector('button')
          if (button) {
            return button
          }
        }
      }
    }

    function getNext(active) {
      if (active) {
        const next = active.parentElement.nextElementSibling
        if (next) {
          const button = next.querySelector('button')
          if (button) {
            return button
          }
        }
      }
    }

    function display(button, href) {
      const active = document.querySelector('[aria-current=page]')
      if (active) active.removeAttribute('aria-current')
      button.setAttribute('aria-current', "page")
      video.src = href
      video.load()

      if (getPrevious(button)) {
        prevButton.removeAttribute('disabled')
      } else {
        prevButton.setAttribute('disabled', "disabled")
      }

      if (getNext(button)) {
        nextButton.removeAttribute('disabled')
      } else {
        nextButton.setAttribute('disabled', "disabled")
      }
    }

    function deleteRecords() {
      const xhr = new XMLHttpRequest()
      xhr.open('delete', '/records')
      xhr.onload = function () {
        window.location.reload()
      }
      xhr.send()
    }

    function deleteRecord(href) {
      const xhr = new XMLHttpRequest()
      xhr.open('delete', href)
      xhr.onload = function () {
        window.location.reload()
      }
      xhr.send()
    }

    function previous() {
      const active = document.querySelector('[aria-current=page]')
      const previous = getPrevious(active)
      if (previous) {
        previous.click()
      }
    }

    function next() {
      const active = document.querySelector('[aria-current=page]')
      const next = getNext(active)
      if (next) {
        next.click()
      }
    }

  </script>
</body>

</html>